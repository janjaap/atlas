import { gefaseerdeBegrotingCategories, CATEGORY_LABELS } from '../categories';
import { displayFactor, precisionRound } from '../helpers';

const generateGraphData = ({ jaren }) => (
  jaren.map((year) => ({
    name: year.name,
    categories: gefaseerdeBegrotingCategories.some((category) => {
      const item = year.categories[category] || {};
      return item.begroot || item.begroot === 0;
    }) && gefaseerdeBegrotingCategories.map((category) => {
      const item = year.categories[category] || {};
      const begroot = item.begroot || 0;
      const begrootValue = begroot / displayFactor;
      const begrootRounded = precisionRound(begrootValue, 1);
      const begrootTooSmallLabel = begrootValue ? '<0,05' : '';
      const begrootLabel = begrootRounded ? `${begrootRounded}`.replace('.', ',') : begrootTooSmallLabel;
      return {
        begroot,
        begrootLabel,
        begrootValue,
        id: category,
        name: CATEGORY_LABELS[category]
      };
    })
  }))
);

// eslint-disable-next-line camelcase
const getMax = ({ max_jaren_axis_begroot }) => Math.round(max_jaren_axis_begroot / displayFactor);

export {
  generateGraphData,
  getMax
};
