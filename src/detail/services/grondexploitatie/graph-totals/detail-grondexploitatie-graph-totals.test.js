import { CATEGORIES, CATEGORY_LABELS } from '../categories';

import generateGraphData from './detail-grondexploitatie-graph-totals';

describe('Grondexploitatie Grafiek Totale Begroting Service', () => {
  describe('generateGraphData', () => {
    const mockApiData = {
      totaal: {
        categories: {
          [CATEGORIES.BEDRIJFSRUIMTE]: {
            begroot: 5000000,
            geboekt: 3000000
          },
          [CATEGORIES.KANTOORRUIMTE]: {
            begroot: 500000,
            geboekt: 0
          },
          [CATEGORIES.MARKT_WONINGEN]: {
            begroot: 0,
            geboekt: 45000
          },
          [CATEGORIES.LUPSUM]: {
            begroot: 449999,
            geboekt: 449999
          }
        }
      }
    };
    const graphData = generateGraphData(mockApiData);
    const findItem = (category) => graphData.find((item) => item.name === category);

    it('should return the data in correct format', () => {
      expect(findItem(CATEGORY_LABELS[CATEGORIES.KANTOORRUIMTE])).toEqual({
        name: CATEGORY_LABELS[CATEGORIES.KANTOORRUIMTE],
        id: CATEGORIES.KANTOORRUIMTE,
        begroot: 500000,
        geboekt: 0,
        begrootLabel: '0,5',
        begrootValue: 0.5,
        geboektLabel: '0',
        geboektValue: 0
      });
      expect(findItem(CATEGORY_LABELS[CATEGORIES.BEDRIJFSRUIMTE])).toEqual({
        name: CATEGORY_LABELS[CATEGORIES.BEDRIJFSRUIMTE],
        id: CATEGORIES.BEDRIJFSRUIMTE,
        begroot: 5000000,
        geboekt: 3000000,
        begrootLabel: '5',
        begrootValue: 5,
        geboektLabel: '3',
        geboektValue: 3
      });
      expect(findItem(CATEGORY_LABELS[CATEGORIES.COMMERCIEEL])).toEqual({
        name: CATEGORY_LABELS[CATEGORIES.COMMERCIEEL],
        id: CATEGORIES.COMMERCIEEL,
        begroot: 0,
        geboekt: 0,
        begrootLabel: '',
        begrootValue: 0,
        geboektLabel: '',
        geboektValue: 0
      });
    });

    it('should complete the label correctly', () => {
      expect(findItem(CATEGORY_LABELS[CATEGORIES.MARKT_WONINGEN]).begrootLabel).toEqual('');
      expect(findItem(CATEGORY_LABELS[CATEGORIES.MARKT_WONINGEN]).geboektLabel).toEqual('<0,05');
      expect(findItem(CATEGORY_LABELS[CATEGORIES.LUPSUM]).begrootLabel).toEqual('0,4');
      expect(findItem(CATEGORY_LABELS[CATEGORIES.LUPSUM]).geboektLabel).toEqual('0,4');
    });
  });
});
