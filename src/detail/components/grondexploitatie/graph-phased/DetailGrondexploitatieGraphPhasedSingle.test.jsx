import React from 'react';
import { shallow } from 'enzyme';

import DetailGrondexploitatieGraphPhasedSingle from './DetailGrondexploitatieGraphPhasedSingle';
import { getBatenCategoryColor, getKostenCategoryColor } from '../../../services/grondexploitatie/categories';

jest.mock('../../../services/grondexploitatie/categories');

describe('DetailGrondexploitatieGraphPhasedSingle', () => {
  const colors = {
    socialeHuur: '#111',
    kantoorruimte: '#999',
    bedrijfsruimte: '#FA0',
    bodemsanering: '#333',
    bouwrijpMaken: '#444',
    civieleConstructies: '#555'
  };
  getBatenCategoryColor.mockImplementation((key) => colors[key]);
  getKostenCategoryColor.mockImplementation((key) => colors[key]);
  it('should render everything', () => {
    const data = {
      name: '2018',
      categories: {
        kostenCategories: [
          {
            id: 'bodemsanering',
            name: 'Bodemsanering',
            begrootValue: 1,
            begrootLabel: '1'
          },
          {
            id: 'bouwrijpMaken',
            name: 'Bouwrijp maken',
            begrootValue: 0,
            begrootLabel: '0'
          },
          {
            id: 'civieleConstructies',
            name: 'Civiele constructies',
            begrootValue: 1,
            begrootLabel: '1'
          }
        ],
        batenCategories: [
          {
            id: 'socialeHuur',
            name: 'Sociale Huur',
            begrootValue: 1,
            begrootLabel: '1'
          },
          {
            id: 'kantoorruimte',
            name: 'Kantoorruimte',
            begrootValue: 0,
            begrootLabel: '0'
          },
          {
            id: 'bedrijfsruimte',
            name: 'Bedrijfsruimte',
            begrootValue: 1,
            begrootLabel: '1'
          }
        ]
      }
    };
    const wrapperBaten = shallow(
      <DetailGrondexploitatieGraphPhasedSingle
        data={data.categories.batenCategories}
        type="baten"
        max={100}
        getCategoryColor={getBatenCategoryColor}
      />);
    expect(wrapperBaten).toMatchSnapshot();

    const wrapperKosten = shallow(
      <DetailGrondexploitatieGraphPhasedSingle
        data={data.categories.kostenCategories}
        type="kosten"
        max={100}
        getCategoryColor={getKostenCategoryColor}
      />);
    expect(wrapperKosten).toMatchSnapshot();
  });

  it('should render a empty notification', () => {
    const wrapperKosten = shallow(
      <DetailGrondexploitatieGraphPhasedSingle
        data={null}
        type="kosten"
        getCategoryColor={getKostenCategoryColor}
      />);
    expect(wrapperKosten).toMatchSnapshot();
  });
});
