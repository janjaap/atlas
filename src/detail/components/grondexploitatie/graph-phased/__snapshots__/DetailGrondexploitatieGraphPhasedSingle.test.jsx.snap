// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailGrondexploitatieGraphPhasedSingle should render a empty notification 1`] = `
<div>
  <h4
    className="detail-grondexploitatie-graph__subtitle"
  >
    Kosten
  </h4>
  <Notification
    canClose={true}
    className=""
    level="message"
  >
    Geen begroting beschikbaar
  </Notification>
</div>
`;

exports[`DetailGrondexploitatieGraphPhasedSingle should render everything 1`] = `
<div>
  <h4
    className="detail-grondexploitatie-graph__subtitle"
  >
    Baten
  </h4>
  <div
    className="detail-grondexploitatie-graph__container"
  >
    <ResponsiveContainer
      debounce={0}
      height="100%"
      minHeight={310}
      minWidth={500}
      width="100%"
    >
      <BarChart
        barCategoryGap="10%"
        barGap={4}
        barSize={20}
        data={
          Array [
            Object {
              "begrootLabel": "1",
              "begrootValue": 1,
              "id": "socialeHuur",
              "name": "Sociale Huur",
            },
            Object {
              "begrootLabel": "0",
              "begrootValue": 0,
              "id": "kantoorruimte",
              "name": "Kantoorruimte",
            },
            Object {
              "begrootLabel": "1",
              "begrootValue": 1,
              "id": "bedrijfsruimte",
              "name": "Bedrijfsruimte",
            },
          ]
        }
        layout="vertical"
        margin={
          Object {
            "bottom": 30,
          }
        }
        reverseStackOrder={false}
        stackOffset="none"
      >
        <XAxis
          allowDataOverflow={false}
          allowDecimals={true}
          allowDuplicatedCategory={true}
          axisLine={false}
          domain={
            Array [
              "auto",
              [Function],
            ]
          }
          height={30}
          hide={false}
          label={
            Object {
              "fill": "#999999",
              "fontSize": "12px",
              "offset": -10,
              "position": "insideBottom",
              "value": "Miljoenen",
            }
          }
          mirror={false}
          orientation="bottom"
          padding={
            Object {
              "left": 0,
              "right": 0,
            }
          }
          reversed={false}
          scale="auto"
          tick={
            Object {
              "fill": "#999999",
            }
          }
          tickCount={5}
          tickLine={false}
          type="number"
          width={0}
          xAxisId={0}
        />
        <YAxis
          allowDataOverflow={false}
          allowDecimals={true}
          allowDuplicatedCategory={true}
          axisLine={false}
          dataKey="name"
          domain={
            Array [
              0,
              "auto",
            ]
          }
          height={0}
          hide={false}
          minTickGap={0}
          mirror={false}
          orientation="left"
          padding={
            Object {
              "bottom": 16,
              "top": 16,
            }
          }
          reversed={false}
          scale="auto"
          tick={
            Object {
              "fill": "#999999",
            }
          }
          tickCount={5}
          tickLine={false}
          type="category"
          width={180}
          yAxisId={0}
        />
        <CartesianGrid
          fill="#F6F6F6"
          horizontal={false}
          horizontalFill={Array []}
          horizontalPoints={Array []}
          stroke="#ccc"
          vertical={true}
          verticalFill={Array []}
          verticalPoints={Array []}
        />
        <Bar
          animationBegin={0}
          animationDuration={400}
          animationEasing="ease"
          data={Array []}
          dataKey="begrootValue"
          hide={false}
          isAnimationActive={true}
          layout="vertical"
          legendType="rect"
          minPointSize={0}
          name="category"
          onAnimationEnd={[Function]}
          onAnimationStart={[Function]}
          xAxisId={0}
          yAxisId={0}
        >
          <Cell
            fill="#111"
            key="Sociale Huur"
          />
          <Cell
            fill="#999"
            key="Kantoorruimte"
          />
          <Cell
            fill="#FA0"
            key="Bedrijfsruimte"
          />
          <LabelList
            dataKey="begrootLabel"
            fill="#000000"
            position="right"
            valueAccessor={[Function]}
          />
        </Bar>
      </BarChart>
    </ResponsiveContainer>
  </div>
</div>
`;

exports[`DetailGrondexploitatieGraphPhasedSingle should render everything 2`] = `
<div>
  <h4
    className="detail-grondexploitatie-graph__subtitle"
  >
    Kosten
  </h4>
  <div
    className="detail-grondexploitatie-graph__container"
  >
    <ResponsiveContainer
      debounce={0}
      height="100%"
      minHeight={310}
      minWidth={500}
      width="100%"
    >
      <BarChart
        barCategoryGap="10%"
        barGap={4}
        barSize={20}
        data={
          Array [
            Object {
              "begrootLabel": "1",
              "begrootValue": 1,
              "id": "bodemsanering",
              "name": "Bodemsanering",
            },
            Object {
              "begrootLabel": "0",
              "begrootValue": 0,
              "id": "bouwrijpMaken",
              "name": "Bouwrijp maken",
            },
            Object {
              "begrootLabel": "1",
              "begrootValue": 1,
              "id": "civieleConstructies",
              "name": "Civiele constructies",
            },
          ]
        }
        layout="vertical"
        margin={
          Object {
            "bottom": 30,
          }
        }
        reverseStackOrder={false}
        stackOffset="none"
      >
        <XAxis
          allowDataOverflow={false}
          allowDecimals={true}
          allowDuplicatedCategory={true}
          axisLine={false}
          domain={
            Array [
              "auto",
              [Function],
            ]
          }
          height={30}
          hide={false}
          label={
            Object {
              "fill": "#999999",
              "fontSize": "12px",
              "offset": -10,
              "position": "insideBottom",
              "value": "Miljoenen",
            }
          }
          mirror={false}
          orientation="bottom"
          padding={
            Object {
              "left": 0,
              "right": 0,
            }
          }
          reversed={false}
          scale="auto"
          tick={
            Object {
              "fill": "#999999",
            }
          }
          tickCount={5}
          tickLine={false}
          type="number"
          width={0}
          xAxisId={0}
        />
        <YAxis
          allowDataOverflow={false}
          allowDecimals={true}
          allowDuplicatedCategory={true}
          axisLine={false}
          dataKey="name"
          domain={
            Array [
              0,
              "auto",
            ]
          }
          height={0}
          hide={false}
          minTickGap={0}
          mirror={false}
          orientation="left"
          padding={
            Object {
              "bottom": 16,
              "top": 16,
            }
          }
          reversed={false}
          scale="auto"
          tick={
            Object {
              "fill": "#999999",
            }
          }
          tickCount={5}
          tickLine={false}
          type="category"
          width={180}
          yAxisId={0}
        />
        <CartesianGrid
          fill="#F6F6F6"
          horizontal={false}
          horizontalFill={Array []}
          horizontalPoints={Array []}
          stroke="#ccc"
          vertical={true}
          verticalFill={Array []}
          verticalPoints={Array []}
        />
        <Bar
          animationBegin={0}
          animationDuration={400}
          animationEasing="ease"
          data={Array []}
          dataKey="begrootValue"
          hide={false}
          isAnimationActive={true}
          layout="vertical"
          legendType="rect"
          minPointSize={0}
          name="category"
          onAnimationEnd={[Function]}
          onAnimationStart={[Function]}
          xAxisId={0}
          yAxisId={0}
        >
          <Cell
            fill="#333"
            key="Bodemsanering"
          />
          <Cell
            fill="#444"
            key="Bouwrijp maken"
          />
          <Cell
            fill="#555"
            key="Civiele constructies"
          />
          <LabelList
            dataKey="begrootLabel"
            fill="#000000"
            position="right"
            valueAccessor={[Function]}
          />
        </Bar>
      </BarChart>
    </ResponsiveContainer>
  </div>
</div>
`;
