import React from 'react';
import PropTypes from 'prop-types';
import {
  Bar,
  BarChart,
  CartesianGrid,
  Cell,
  LabelList,
  ResponsiveContainer,
  XAxis,
  YAxis
} from 'recharts';

import Notification from '../../../../shared/components/notification/Notification';

import './_detail-grondexploitatie-graph-phased.scss';

const isKosten = (type) => type === 'kosten';

const DetailGrondexploitatieGraphPhasedSingle = ({ data, max, getCategoryColor, type }) => (
  <div>
    <h4 className="detail-grondexploitatie-graph__subtitle">
      { isKosten(type) ? 'Kosten' : 'Baten' }
    </h4>
    { !data &&
      <Notification level="message">Geen begroting beschikbaar</Notification>
    }
    { data && data.length && (
      <div className="detail-grondexploitatie-graph__container">
        <ResponsiveContainer
          minHeight={310}
          minWidth={500}
          width="100%"
        >
          <BarChart
            barSize={20}
            data={data}
            layout="vertical"
            margin={{ bottom: 30 }}
          >
            <XAxis
              axisLine={false}
              domain={['auto', /* istanbul ignore next */ () => max]}
              label={{
                fill: '#999999',
                fontSize: '12px',
                offset: -10,
                position: 'insideBottom',
                value: 'Miljoenen'
              }}
              tick={{ fill: '#999999' }}
              tickLine={false}
              type="number"
            />
            <YAxis
              axisLine={false}
              dataKey="name"
              hide={false}
              minTickGap={0}
              padding={{ top: 16, bottom: 16 }}
              tick={{ fill: '#999999' }}
              tickLine={false}
              type="category"
              width={180}
            />
            <CartesianGrid
              fill="#F6F6F6"
              horizontal={false}
            />
            <Bar
              dataKey="begrootValue"
              name="category"
            >
              {
                data.map((entry) => (
                  <Cell
                    fill={getCategoryColor(entry.id)}
                    key={entry.name}
                  />
                ))
              }
              <LabelList
                dataKey="begrootLabel"
                fill="#000000"
                position="right"
              />
            </Bar>
          </BarChart>
        </ResponsiveContainer>
      </div>
    )
    }
  </div>
);

DetailGrondexploitatieGraphPhasedSingle.defaultProps = {
  data: [],
  max: 0,
  year: '',
  type: 'baten'
};

DetailGrondexploitatieGraphPhasedSingle.propTypes = {
  data: PropTypes.oneOfType([
    PropTypes.arrayOf(PropTypes.shape({})),
    PropTypes.bool
  ]),
  max: PropTypes.number,
  getCategoryColor: PropTypes.func.isRequired,
  type: PropTypes.oneOf(['baten', 'kosten'])
};

export default DetailGrondexploitatieGraphPhasedSingle;
