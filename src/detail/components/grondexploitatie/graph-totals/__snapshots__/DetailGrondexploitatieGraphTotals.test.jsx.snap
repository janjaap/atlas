// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailGrondexploitatieGraphTotals should render everything 1`] = `
<div
  className="detail-grondexploitatie-graph"
>
  <h3
    className="detail-grondexploitatie-graph__title"
  >
    Totale begroting
  </h3>
  <div
    className="detail-grondexploitatie-graph__container"
  >
    <ResponsiveContainer
      debounce={0}
      height="100%"
      minHeight={559}
      minWidth={500}
      width="100%"
    >
      <BarChart
        barCategoryGap="10%"
        barGap={4}
        barSize={20}
        data={
          Array [
            Object {
              "begroot": Object {
                "label": "1",
                "value": 1,
              },
              "geboekt": Object {
                "label": "1",
                "value": 1,
              },
              "id": "Sociale huur",
              "name": "Sociale huurwoningen",
            },
            Object {
              "begroot": Object {
                "label": "0",
                "value": 0,
              },
              "geboekt": Object {
                "label": "0",
                "value": 0,
              },
              "id": "Kantoorruimte",
              "name": "Kantoorruimte",
            },
            Object {
              "begroot": Object {
                "label": "0,5",
                "value": 0.5,
              },
              "geboekt": Object {
                "label": "0",
                "value": 0,
              },
              "id": "Sociale huur",
              "name": "Bedrijfsruimte",
            },
          ]
        }
        layout="vertical"
        margin={
          Object {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        reverseStackOrder={false}
        stackOffset="none"
      >
        <XAxis
          allowDataOverflow={false}
          allowDecimals={true}
          allowDuplicatedCategory={true}
          axisLine={false}
          domain={
            Array [
              "auto",
              [Function],
            ]
          }
          height={30}
          hide={false}
          label={
            Object {
              "fill": "#999999",
              "offset": -10,
              "position": "insideBottom",
              "value": "Miljoenen",
            }
          }
          mirror={false}
          orientation="bottom"
          padding={
            Object {
              "left": 0,
              "right": 0,
            }
          }
          reversed={false}
          scale="auto"
          tick={
            Object {
              "fill": "#999999",
            }
          }
          tickCount={5}
          tickLine={false}
          type="number"
          width={0}
          xAxisId={0}
        />
        <YAxis
          allowDataOverflow={false}
          allowDecimals={true}
          allowDuplicatedCategory={true}
          axisLine={false}
          dataKey="name"
          domain={
            Array [
              0,
              "auto",
            ]
          }
          height={0}
          hide={false}
          mirror={false}
          orientation="left"
          padding={
            Object {
              "bottom": 16,
              "top": 16,
            }
          }
          reversed={false}
          scale="auto"
          tick={
            <CustomYTick
              payload={
                Object {
                  "value": "",
                }
              }
              x={0}
              y={0}
            />
          }
          tickCount={5}
          tickLine={false}
          type="category"
          width={180}
          yAxisId={0}
        />
        <CartesianGrid
          fill="#F6F6F6"
          horizontal={false}
          horizontalFill={Array []}
          horizontalPoints={Array []}
          stroke="#ccc"
          vertical={true}
          verticalFill={Array []}
          verticalPoints={Array []}
        />
        <Legend
          align="center"
          content={
            <DetailGrondexploitatieGraphLegend
              payload={Array []}
            />
          }
          iconSize={14}
          layout="horizontal"
          verticalAlign="bottom"
        />
        <Bar
          animationBegin={0}
          animationDuration={400}
          animationEasing="ease"
          data={Array []}
          dataKey="begrootValue"
          hide={false}
          isAnimationActive={true}
          layout="vertical"
          legendType="rect"
          minPointSize={0}
          name="category"
          onAnimationEnd={[Function]}
          onAnimationStart={[Function]}
          xAxisId={0}
          yAxisId={0}
        >
          <Cell
            fill="#C2D133"
            key="Sociale huurwoningen"
          />
          <Cell
            fill="#3387C2"
            key="Kantoorruimte"
          />
          <Cell
            fill="#C2D133"
            key="Bedrijfsruimte"
          />
          <LabelList
            dataKey="begrootLabel"
            fill="#000000"
            position="right"
            valueAccessor={[Function]}
          />
        </Bar>
        <Bar
          animationBegin={0}
          animationDuration={400}
          animationEasing="ease"
          data={Array []}
          dataKey="geboektValue"
          fill="#808080"
          hide={false}
          isAnimationActive={true}
          layout="vertical"
          legendType="rect"
          minPointSize={0}
          name="realized"
          onAnimationEnd={[Function]}
          onAnimationStart={[Function]}
          shape={
            <CustomBar
              fill=""
              height={0}
              width={0}
              x={0}
              y={0}
            />
          }
          xAxisId={0}
          yAxisId={0}
        >
          <LabelList
            content={
              <CustomLabel
                height={0}
                value=""
                width={0}
                x={0}
                y={0}
              />
            }
            dataKey="geboektLabel"
            fill="#000000"
            position="right"
            valueAccessor={[Function]}
          />
        </Bar>
      </BarChart>
    </ResponsiveContainer>
  </div>
</div>
`;
